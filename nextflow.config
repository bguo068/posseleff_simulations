params.resdir = 'resdir'

env {
    TMPDIR="/tmp"
}

// As of version 22.08.0-edge the use Conda recipes specified using the conda
// directive needs to be enabled explicitly by setting the option shown below in
// the pipeline configuration file (i.e. nextflow.config):

conda.enabled = true


profiles{
    standard {
        executor 
        {
            name = 'local'
            queueSize = 35
            cpus = 35
            pollInterval = '30 sec'
        }
        process {
            // For faster testing
            // conda = "/home/gbinux/mambaforge/envs/simulation"

            errorStrategy = {task.attempt < 5 ? 'retry': 'finish'}
            maxRetries = 5
            cpus = 1
            memory = '5 GB'
            cache = 'lenient' // NFS report inconsistent file timestamp for unmodified file; lenient mode of caching can avoid this problem.

            withName: "RUN_IBDNE" {
                cpus = 10
                memory = '20 GB'
            }
        }
    }
    sge {
        executor {
            name = 'sge'
            queueSize = 400
            pollInterval = '30 sec'
        }

        process {
            // conda = "/local/projects-t3/toconnor_grp/bing.guo/miniconda3/envs/ibd"
            errorStrategy = { sleep(Math.pow(2 , task.attempt) * 20 as long); return task.attempt < 5 ? 'retry': 'finish'}
            maxRetries = 5
            cpus = 1
            memory = '15 GB'
            cache = 'lenient' // NFS report inconsistent file timestamp for unmodified file; lenient mode of caching can avoid this problem.

            queue = "threaded.q"
            penv = "thread"
            clusterOptions = "-P toconnor-lab -cwd -V"

            // For faster testing
	    withName: "SIM_SP_GW" {
                memory = {def mem = 10 * 2 ** task.attempt; mem > 300 ? '300 GB' : "$mem GB"}
                errorStrategy = { sleep(Math.pow(2 , task.attempt) * 20 as long); return task.attempt < 5 ? 'retry': 'ignore'}
	    }
            withName: "PROC_DIST_NE" {
                errorStrategy = { sleep(Math.pow(2 , task.attempt) * 20 as long); return task.attempt < 5 ? 'retry': 'ignore'}
            }
            withName: "RUN_IBDNE" {
                cpus = 10
                memory = {def mem = 10 * 2 ** task.attempt; mem > 300 ? '300 GB' : "$mem GB"}
                errorStrategy = { sleep(Math.pow(2 , task.attempt) * 20 as long); return task.attempt < 5 ? 'retry': 'ignore'}
            }
        
        }
    }
    hq {
        executor {
          name = 'hq'
          queueSize = 400
          pollInterval = '10 sec'
        }

        process {
            conda = "/local/devel/bing.guo/mambaforge/envs/simulation"
            errorStrategy = { sleep(Math.pow(2 , task.attempt) * 20 as long); return task.attempt < 5 ? 'retry': 'finish'}
            maxRetries = 5
            cpus = 1
            memory = '15 GB'
            cache = 'lenient' // NFS report inconsistent file timestamp for unmodified file; lenient mode of caching can avoid this problem.

            // For faster testing
	        withName: "SIM_SP_GW" {
                memory = {def mem = 10 * 2 ** task.attempt; mem > 300 ? '300 GB' : "$mem GB"}
                errorStrategy = { sleep(Math.pow(2 , task.attempt) * 20 as long); return task.attempt < 5 ? 'retry': 'ignore'}
	        }
            withName: "PROC_DIST_NE" {
                errorStrategy = { sleep(Math.pow(2 , task.attempt) * 20 as long); return task.attempt < 5 ? 'retry': 'ignore'}
            }
            withName: "RUN_IBDNE" {
                cpus = 10
                memory = {def mem = 10 * 2 ** task.attempt; mem > 300 ? '300 GB' : "$mem GB"}
                errorStrategy = { sleep(Math.pow(2 , task.attempt) * 20 as long); return task.attempt < 5 ? 'retry': 'ignore'}
            }
        
        }
    }
}

manifest {
    name            = 'posseleff_simulations'
    author          = 'Bing Guo'
    homePage        = 'https://github.com/posseleff_simulations'
    description     = 'Nextflow analyses pipeline for evaluating positive simulation'
    mainScript      = 'main.nf'
    nextflowVersion = '>=21.04.0'
    version         = '0.1'
}

trace {
    enabled = true
    overwrite = true
    file = "${params.resdir}/pipeline_trace.txt"
    fields = 'native_id,task_id,hash,name,status,exit,realtime,%cpu,rss,workdir'
}

